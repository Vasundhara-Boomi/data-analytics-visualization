
electricity_use_kwh = [
    211432.1, 61692.3, 24760, 55595.7, 67424.2, 48694.6, 124758.8, 4624, 2256517.1, 181760, 15867.2, 25333.7, 108471.4,
    31645.3, 1960, 50294, 60741.6, 41233.2, 54532.3, 43358.3, 55405.2, 69120.7, 36046, 57760, 20169.6, 58816.7, 52195.4,
    12977.6, 60820.1, 73610.3, 36707, 47776.4, 85600, 59813.7, 33937.4, 69938.4, 35828, 44817.2, 19360.7, 51360.8, 83851.9,
    17360.5, 86888.4, 47502.3, 90960, 82350, 18326.1, None, 44987.5, 11280, 1265599.9, 595199.9, None, 587.6, 80622.4,
    40402.8, 23684.8, 0, 6742.5, 106122.2, 3524.4, 20168.4, 86356.9, 36814.4, 20782.5, None, 18600, 46776.3, 26190.4,
    29695.9, 782.3, 22091.7, 22767.3, 70794.1, 51910, 26489, 29297.3, 20004, 41690, 6160.7, 116836.9, 166049.7, 12214.8,
    64910, 24250.6, 1181499.9, 323029.3, 127269.5, None, 60192.4, 57008.6, 95520, 45210.3, 64815.8, 195206.5, 1915417.1,
    62835.5, 49040, None, 127809.8, 102777.2, 149082.4, 120046, 109827.1, 266737.6, 102160, 96866.6, 4638.8, 73781.8,
    32700.6, 9926.4, 100078.9, 192210, 97798.7, 295998.3, 51139.3, 134253.7, 17943.9, 50113, 2918.6, 20199.7, 4952.1,
    57247.1, 798309.8, None, 47434.5, None, 6420.5, 51316.6, 64654.4, 48192, 135400.2, 2424.6, 40379.7, 18937.6, 271213.6,
    136284.2, 57880.6, 18108.7, 45096.5, 69539.9, 62139, 125070.3, 14949, 2544431.9, 209323, 11399, 32885.5, 97530, 5321.2,
    50590, 60332.1, 60616.9, 55904.8, 59103.4, 69654.3, 37511.2, 54783.1, 61114.7, 53130.7, 10494.4, 85073.1, 46962.8, 56949,
    106689.6, 69312.1, 35506.5, 84793.4, 36114.5, 50119.2, 76776.1, 22156.2, 82905.5, 95723.4, 62919.3, 1224899.8, 530679.9,
    25917.2, 68945.9, 24835.9, 55820.7, 21847.2, 16160, 50496.1, 31928.5, 480, 17690, 64833.1, 52920, 22399.3, 21395,
    51031.1, 5707.6, 5410.2, 76554.5, 15309, 505480, 75506.7, 97200
]

ghg_emissions = [
    206, 64.3, 32.2, 57.3, 81.8, None, 123.8, 27.9, 2218.3, 124.6, 10.9, 22.1, 117.6, None, 1.3, 73.8, 74.6, 65.8, 66.2, 53.4, 87.3, 86.9, None, 64.4, 13.8,
    77.5, 66.9, 39.3, 69.7, 101.7, 52, 63.4, 97.3, 68, 43.4, 81, 57, 64.3, 13.3, 76.7, 93.6, 35.1, 119, 60.3, 102.6, 89.8, 26.5, None, 30.8, None, 1205.4,
    408, None, 0.4, 77.3, 27.7, 25.1, 0, 4.6, None, 2.4, 23.5, None, 25.2, 26, None, 12.8, None, 26.5, 70.2, 33.1, 15.1, 31.7, 81.7, 60.4, 35.8, 48.4, 24.2,
    57.2, 19.2, 115.3, 113.8, 8.4, 68.5, 32.3, None, 221.5, 244.6, None, 91.8, 54.9, 176.8, 31, 103.7, 219.1, 1313, 43.1, 69.3, None, 100.7, 161.1, None,
    240.9, 136.1, 182.9, 90, 160.5, 3.2, 139.4, 43.1, 16, 245.1, 131.8, 150.9, 202.9, 67, 92, 12.3, 34.4, 2, 13.8, 3.4, 39.2, None, None, 32.5, None, 4.4,
    35.2, 130.4, 49.4, 216, 1.7, 27.7, 30.2, 213, 150.1, 144.7, 21, 47.3, 76.6, 60.7, 114.8, 27.8, 2355.6, 143.5, 7.8, 26, 106.6, 3.6, 70.8, 71.3, 61.2,
    67.8, 82.7, 89.6, 46.9, 59.3, 81.4, 58.5, 44.4, 84.9, 56.7, 64.7, 105.2, 72.5, 54.9, 88.7, 53.1, 73.8, 88, 37.5, 113.4, 102.7, 78.3, 1122.5, 363.8,
    23.3, 68.6, 23.1, 44.7, 23.6, 15.8, 90.9, 53.9, 21.1, 25.4, 76.2, 57.4, 44.3, 25.3, 61.2, 15.1, 17.8, 81.4, 32.2, 346.6, 112.1, 160.2
]

import csv

# Calculate Appliance Efficiency
appliance_efficiency = [
    round((ghg / electricity) * 10000,2) if ghg is not None and ghg != 0 else None
    for electricity, ghg in zip(electricity_use_kwh, ghg_emissions)
]

# Add Appliance Efficiency to CSV
csv_file_path = 'appliance_eff.csv'  # Provide the path to your CSV file

with open(csv_file_path, mode='w', newline='') as csv_file:
    fieldnames = ['Electricity Use - (kWh)',
                  'Total GHG Emissions (Metric Tons CO2e)', 'Appliance Efficiency (%)']
    
    writer = csv.DictWriter(csv_file, fieldnames=fieldnames)
    writer.writeheader()

    for electricity, ghg, efficiency in zip(electricity_use_kwh, ghg_emissions, appliance_efficiency):
        writer.writerow({
            'Electricity Use - (kWh)': electricity,
            'Total GHG Emissions (Metric Tons CO2e)': ghg,
            'Appliance Efficiency (%)': efficiency
        })

print("Appliance Efficiency (percentage) calculated and added to the CSV file.")